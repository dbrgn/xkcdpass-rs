version: 2

references:
  build-steps: &build-steps
    - checkout
    # Load cargo target from cache if possible.
    # Multiple caches are used to increase the chance of a cache hit.
    - restore_cache:
        keys:
          - v1-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
          - v1-cargo-cache-{{ arch }}-{{ .Branch }}
          - v1-cargo-cache-{{ arch }}
    - run: cargo build && cargo test
    - save_cache:
        key: v1-cargo-cache-{{ arch }}{{ checksum "Cargo.lock" }}
        paths:
          - target
          - /usr/local/cargo
    - save_cache:
        key: v1-cargo-cache-{{ arch }}-{{ .Branch }}
        paths:
          - target
          - /usr/local/cargo
    - save_cache:
        key: v1-cargo-cache-{{ arch }}
        paths:
          - target
          - /usr/local/cargo

jobs:
  build-1.20:
    docker:
      - image: rust:1.20
    steps: *build-steps
  build-stable:
    docker:
      - image: rust:latest
    steps: *build-steps
  audit:
    docker:
      - image: saltyrtc/circleci-image-rs:latest
    steps:
      - checkout
      - run: cargo audit

workflows:
  version: 2
  build:
    jobs:
      - build-1.20
      - build-stable
      - audit
